# Transrify App Environment Configuration

# API Base URL
# The base URL for the Transrify API backend
# Example: https://api.transrify.com or https://api.example.com
EXPO_PUBLIC_API_BASE_URL=https://api.example.com

# Tenant Key (Optional - can be entered in the login screen)
# Your organization's unique API key for accessing the Transrify API
# This key identifies your tenant in the Transrify system
# Contact support to obtain your tenant key
# Note: Users can also enter the tenant key directly in the login form
EXPO_PUBLIC_TENANT_KEY=DEMO_TENANT

# ============================================================================
# DURESS PROXIMITY ALERTS CONFIGURATION
# ============================================================================

# NFC Support (Feature Flag)
# Enable or disable NFC functionality for alert acknowledgment
# Set to "true" to enable NFC features (requires Development Build)
# Set to "false" to disable NFC features (compatible with Expo Go)
# 
# IMPORTANT: NFC functionality requires a custom Development Build and will
# NOT work in Expo Go. When running in Expo Go, always set this to "false".
# To use NFC features:
#   1. Set EXPO_PUBLIC_NFC_ENABLED=true
#   2. Run `npx expo prebuild` to generate native code
#   3. Build and run the app using `npx expo run:ios` or `npx expo run:android`
#
# Default: false (Expo Go compatible)
EXPO_PUBLIC_NFC_ENABLED=false

# WebSocket URL (Optional)
# WebSocket endpoint for real-time duress alert notifications
# If provided, the app will attempt to connect via WebSocket for low-latency alerts
# If not provided or connection fails, the app will fall back to HTTP polling
# Example: wss://api.transrify.com/ws or wss://api.example.com/ws
# Leave empty to use polling only
# Default: empty (uses polling)
EXPO_PUBLIC_WS_URL=

# Alert Search Radius (meters)
# The radius in meters to search for nearby duress alerts
# Users will receive alerts for duress events within this distance
# Valid range: 100 to 10000 meters (0.1km to 10km)
# Recommended: 1000 meters (1km) for urban areas, 5000 meters (5km) for rural areas
# Default: 1000
ALERT_RADIUS_METERS=1000

# Alert Polling Interval (milliseconds)
# How frequently to check for nearby alerts when WebSocket is unavailable
# Lower values provide faster alert delivery but increase battery usage and API calls
# Higher values reduce battery usage but may delay alert notifications
# Recommended: 15000ms (15 seconds) for balanced performance
# Minimum: 5000ms (5 seconds) to avoid rate limiting
# Default: 15000
ALERT_POLL_INTERVAL_MS=15000
